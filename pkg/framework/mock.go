// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spolab/petstore/pkg/framework (interfaces: EventSourcedRepository)

// Package framework is a generated GoMock package.
package framework

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEventSourcedRepository is a mock of EventSourcedRepository interface.
type MockEventSourcedRepository struct {
	ctrl     *gomock.Controller
	recorder *MockEventSourcedRepositoryMockRecorder
}

// MockEventSourcedRepositoryMockRecorder is the mock recorder for MockEventSourcedRepository.
type MockEventSourcedRepositoryMockRecorder struct {
	mock *MockEventSourcedRepository
}

// NewMockEventSourcedRepository creates a new mock instance.
func NewMockEventSourcedRepository(ctrl *gomock.Controller) *MockEventSourcedRepository {
	mock := &MockEventSourcedRepository{ctrl: ctrl}
	mock.recorder = &MockEventSourcedRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEventSourcedRepository) EXPECT() *MockEventSourcedRepositoryMockRecorder {
	return m.recorder
}

// Load mocks base method.
func (m *MockEventSourcedRepository) Load(arg0 EventSourcedAggregate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Load indicates an expected call of Load.
func (mr *MockEventSourcedRepositoryMockRecorder) Load(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockEventSourcedRepository)(nil).Load), arg0)
}

// Save mocks base method.
func (m *MockEventSourcedRepository) Save(arg0 EventSourcedAggregate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockEventSourcedRepositoryMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockEventSourcedRepository)(nil).Save), arg0)
}
